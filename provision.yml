- hosts: all
  become: yes

  vars:

    default_user: vagrant
    default_home: /home/{{ default_user }}
    minikube_install_path: /usr/local/bin/minikube
    minikube_bin_url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    cri_download_path: '{{ default_home }}/cri-dockerd'
    cri_repo_url: https://github.com/Mirantis/cri-dockerd.git
    go_bin_url: https://storage.googleapis.com/golang/getgo/installer_linux

  tasks:
      
    - name: Check if minikube binary is downloaded
      command: ls {{ default_home }}/minikube-linux-amd64
      register: minikube_downloaded
      ignore_errors: yes

    - name: Download minikube
      get_url: 
        url: '{{ minikube_bin_url }}'
        dest: '{{ default_home }}'
      when: minikube_downloaded is failed

    - name: Check if minikube is installed
      command: ls {{ minikube_install_path }}
      register: minikube_installed
      ignore_errors: yes

    - name: Install minikube
      copy:
        src: '{{ default_home }}/minikube-linux-amd64'
        remote_src: yes
        dest: '{{ minikube_install_path }}'
        owner: root
        group: root
        mode: 'u=rwx,go=rx'
      when: minikube_installed is failed
    
    - name: Check if Docker is installed
      shell: docker --version
      register: docker_installed

    - name: Install prerequisites for Docker repository
      apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common', 'conntrack', 'net-tools', 'python3-pip', 'python3-setuptools', 'virtualenv']
        update_cache: yes
      when: docker_installed is failed
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
      when: docker_installed is failed

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
      when: docker_installed is failed

    - name: Install Docker CE and other components
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose-plugin']
        update_cache: yes
      when: docker_installed is failed

    - name: Add default user to docker group
      user:
        name: '{{ default_user }}'
        groups: docker
        append: yes
      when: docker_installed is failed

    - name: Check if GO is installed
      shell: go version
      environment:
        PATH: "/root/.go/bin:{{ ansible_env.PATH }}"
      register: golang_installed

    - name: Download GO binary
      get_url:
        url: '{{ go_bin_url }}'
        dest: '{{ default_home }}'
        owner: root
        group: root
        mode: 'u=rwx,go=rw'
      when: golang_installed is failed

    - name: Install GO
      command: ./installer_linux
      when: golang_installed is failed
    
    - name: Clone cri-dockerd repo
      git:
        repo: '{{ cri_repo_url }}'
        dest: '{{ cri_download_path }}'
        clone: yes
        update: yes